Omniscient V1

# Element data from
# https://www.nist.gov/pml/atomic-weights-and-isotopic-compositions-relative-atomic-masses
element=Gallium
    isotope=69
        mass: 68.9255735 amu
        composition: .60108
    isotope=71
        mass: 70.92470258 amu
        composition: .39892
element=Nitrogen
    isotope=14
        mass: 14.00307400443 amu
        composition: .99636
    isotope=15
        mass: 15.00010889888 amu
        composition: .00364

material=GaN
    crystal: 'wurtzite'
material=AlN
    crystal: 'wurtzite'

crystal=wurtzite

    # See http://etheses.dur.ac.uk/2938/1/2938_769.pdf
    unitcell=conventional

        # Primitive vectors given in Cartesian basis
        # Lattice constants a, c can be specified
        # If c is not specified, "ideal wurtzite" value of $2\sqrt{2/3}a$ is assumed
        vecs
            a1: `lambda a,c=None: r_[ a/2, sqrt(3)*a/2, 0]`
            a2: `lambda a,c=None: r_[-a/2, sqrt(3)*a/2, 0]`
            a3: `lambda a,c=None: r_[   0,           0, c] if c is not None else r_[0,0,2*sqrt(2/3)*a]`

        # Basis vectors given in basis of primitive vectors
        # Internal parameter u can be specified, where $u*c$ is vertical bond length
        # If u is not specified, "ideal wurtzite" value of $3/8$ is assumed
        basis:
            .
                element: 'Nitrogen'
                position: `lambda u=3/8: r_[0,0,0]`
            .
                element: 'Gallium'
                position: `lambda u=3/8: r_[0,0,u]`
            .
                element: 'Nitrogen'
                position: `lambda u=3/8: r_[1/3,1/3,1/2]`
            .
                element: 'Gallium'
                position: `lambda u=3/8: r_[1/3,1/3,1/2+u]`

    brillouin
        # See http://lampx.tugraz.at/~hadley/ss1/bzones/hexagonal.php
        symmetry points
            Gamma:  `lambda a,c: r_[0.,0.,0.]`
            A:      `lambda a,c: r_[0,0,pi/c]`
            K:      `lambda a,c: r_[4*pi/(3*a),0,0]`
            H:      `lambda a,c: r_[4*pi/(3*a),0,pi/c]`
            M:      `lambda a,c: r_[pi/a,-pi/(sqrt(3)*a),0]`
            L:      `lambda a,c: r_[pi/a,-pi/(sqrt(3)*a),pi/c]`
